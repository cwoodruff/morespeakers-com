@model morespeakers.Pages.Account.IndexModel
@{
    var field = ViewData["Field"] as string ?? "";
    var fieldName = field.ToLower();
    var displayName = GetDisplayName(field);
    var value = GetFieldValue(Model, field);
}

<div class="field-edit">
    <form hx-post="/Account?handler=EditField&field=@field"
          hx-target="#@(fieldName)-container"
          hx-swap="innerHTML">

        <div class="mb-2">
            <label class="form-label fw-medium text-muted small">@displayName</label>

            @if (field == "Bio")
            {
                <textarea asp-for="Input.Bio" class="form-control" rows="4" placeholder="Enter your @displayName.ToLower()...">@value</textarea>
                <span asp-validation-for="Input.Bio" class="text-danger small"></span>
            }
            else if (field == "Goals")
            {
                <textarea asp-for="Input.Goals" class="form-control" rows="4" placeholder="Enter your @displayName.ToLower()...">@value</textarea>
                <span asp-validation-for="Input.Goals" class="text-danger small"></span>
            }
            else if (field == "SpeakerTypeId")
            {
                <select asp-for="Input.SpeakerTypeId" class="form-select">
                    <option value="1" selected="@(Model.CurrentUser.SpeakerTypeId == 1)">New Speaker</option>
                    <option value="2" selected="@(Model.CurrentUser.SpeakerTypeId == 2)">Experienced Speaker</option>
                </select>
                <span asp-validation-for="Input.SpeakerTypeId" class="text-danger small"></span>
            }
            else if (field == "Email")
            {
                <input asp-for="Input.Email" type="email" class="form-control" value="@value" placeholder="Enter your email address" />
                <span asp-validation-for="Input.Email" class="text-danger small"></span>
            }
            else if (field == "PhoneNumber")
            {
                <input asp-for="Input.PhoneNumber" type="tel" class="form-control" value="@value" placeholder="Enter your phone number" />
                <span asp-validation-for="Input.PhoneNumber" class="text-danger small"></span>
            }
            else if (field == "SessionizeUrl")
            {
                <input asp-for="Input.SessionizeUrl" type="url" class="form-control" value="@value" placeholder="https://..." />
                <span asp-validation-for="Input.SessionizeUrl" class="text-danger small"></span>
            }
            else if (field == "HeadshotUrl")
            {
                <input asp-for="Input.HeadshotUrl" type="url" class="form-control" value="@value" placeholder="https://..." />
                <span asp-validation-for="Input.HeadshotUrl" class="text-danger small"></span>
            }
            else if (field == "FirstName")
            {
                <input asp-for="Input.FirstName" type="text" class="form-control" value="@value" placeholder="Enter your @displayName.ToLower()" />
                <span asp-validation-for="Input.FirstName" class="text-danger small"></span>
            }
            else if (field == "LastName")
            {
                <input asp-for="Input.LastName" type="text" class="form-control" value="@value" placeholder="Enter your @displayName.ToLower()" />
                <span asp-validation-for="Input.LastName" class="text-danger small"></span>
            }
        </div>

        <div class="d-flex gap-2">
            <button type="submit" class="btn btn-sm btn-success">
                <i class="bi bi-check me-1"></i>Save
            </button>
            <button type="button"
                    class="btn btn-sm btn-outline-secondary"
                    hx-get="/Account?handler=CancelEdit&field=@field"
                    hx-target="#@(fieldName)-container"
                    hx-swap="innerHTML">
                <i class="bi bi-x me-1"></i>Cancel
            </button>
        </div>
    </form>
</div>

@functions {
    private string GetDisplayName(string field)
    {
        return field switch
        {
            "FirstName" => "First Name",
            "LastName" => "Last Name",
            "Email" => "Email Address",
            "PhoneNumber" => "Phone Number",
            "Bio" => "Biography",
            "Goals" => "Goals",
            "SessionizeUrl" => "Sessionize Profile URL",
            "HeadshotUrl" => "Profile Photo URL",
            "SpeakerTypeId" => "Speaker Type",
            _ => field
        };
    }

    private string? GetFieldValue(morespeakers.Pages.Account.IndexModel model, string field)
    {
        return field switch
        {
            "FirstName" => model.Input.FirstName,
            "LastName" => model.Input.LastName,
            "Email" => model.Input.Email,
            "PhoneNumber" => model.Input.PhoneNumber,
            "Bio" => model.Input.Bio,
            "Goals" => model.Input.Goals,
            "SessionizeUrl" => model.Input.SessionizeUrl,
            "HeadshotUrl" => model.Input.HeadshotUrl,
            "SpeakerTypeId" => model.Input.SpeakerTypeId.ToString(),
            _ => null
        };
    }
}