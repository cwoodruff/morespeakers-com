@page
@model RegisterModel
@{
    ViewData["Title"] = "Join MoreSpeakers.com";
}

<div class="container-fluid">
    <div class="row min-vh-100">
        <!-- Welcome Section -->
        <div class="col-xl-4 col-lg-5 d-none d-lg-flex align-items-center justify-content-center bg-primary text-white">
            <div class="text-center px-4">
                <div class="mb-4">
                    <i class="bi bi-megaphone-fill display-1"></i>
                </div>
                <h2 class="fw-bold mb-3">Start Your Speaking Journey</h2>
                <p class="lead mb-4">Join thousands of speakers who are growing their careers through mentorship and community support.</p>

                <div class="row text-center">
                    <div class="col-4">
                        <div class="bg-white bg-opacity-10 rounded p-3 mb-3">
                            <i class="bi bi-person-plus-fill h3 mb-2 d-block"></i>
                            <h6 class="fw-bold">New Speakers</h6>
                            <small>Learn from experienced mentors</small>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="bg-white bg-opacity-10 rounded p-3 mb-3">
                            <i class="bi bi-award-fill h3 mb-2 d-block"></i>
                            <h6 class="fw-bold">Mentors</h6>
                            <small>Share your expertise</small>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="bg-white bg-opacity-10 rounded p-3 mb-3">
                            <i class="bi bi-people-fill h3 mb-2 d-block"></i>
                            <h6 class="fw-bold">Community</h6>
                            <small>Connect and grow together</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Registration Form Section -->
        <div class="col-xl-8 col-lg-7 py-5">
            <div class="container">
                <div class="row justify-content-center">
                    <div class="col-lg-8">
                        <div class="text-center mb-4">
                            <h1 class="h3 fw-bold text-primary">Create Your Speaker Profile</h1>
                            <p class="text-muted">Tell us about yourself and join the community</p>
                        </div>

                        <div class="card shadow-sm border-0">
                            <div class="card-body p-4">
                                <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post" data-validate>
                                    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                                    <!-- Progress Indicator -->
                                    <div class="mb-4">
                                        <div class="row text-center" id="stepIndicator">
                                            <div class="col">
                                                <div class="step active" data-step="1">
                                                    <div class="step-circle">1</div>
                                                    <small>Account</small>
                                                </div>
                                            </div>
                                            <div class="col">
                                                <div class="step" data-step="2">
                                                    <div class="step-circle">2</div>
                                                    <small>Profile</small>
                                                </div>
                                            </div>
                                            <div class="col">
                                                <div class="step" data-step="3">
                                                    <div class="step-circle">3</div>
                                                    <small>Expertise</small>
                                                </div>
                                            </div>
                                            <div class="col">
                                                <div class="step" data-step="4">
                                                    <div class="step-circle">4</div>
                                                    <small>Social</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Step Container -->
                                    <div id="stepContainer">
                                        <partial name="_RegisterStep1" model="Model" />
                                    </div>

                                    <!-- Navigation Buttons -->
                                    <div class="d-flex justify-content-between mt-4" id="navigationButtons">
                                        <button type="button" id="prevBtn" class="btn btn-outline-secondary" style="display: none;"
                                                hx-post="/Identity/Account/Register?handler=PreviousStep"
                                                hx-target="#stepContainer"
                                                hx-include="#registerForm"
                                                hx-vals='{"step": "2"}'
                                                hx-swap="innerHTML">
                                            <i class="bi bi-arrow-left me-2"></i>Previous
                                        </button>
                                        <button type="button" id="nextBtn" class="btn btn-primary"
                                                hx-post="/Identity/Account/Register?handler=ValidateStep"
                                                hx-target="#stepContainer"
                                                hx-include="#registerForm"
                                                hx-vals='{"step": "1"}'
                                                hx-swap="innerHTML"
                                                hx-indicator="#loading-indicator"
                                                _="on htmx:beforeRequest add .disabled to me then add .d-none to #nextBtn then remove .d-none from #loading-indicator
                                                   on htmx:afterRequest remove .disabled from me then remove .d-none from #nextBtn then add .d-none to #loading-indicator">
                                            Next<i class="bi bi-arrow-right ms-2"></i>
                                        </button>
                                        <button type="submit" id="submitBtn" class="btn btn-success" style="display: none;">
                                            <i class="bi bi-person-plus me-2"></i>Create Account
                                        </button>
                                        <div id="loading-indicator" class="d-none">
                                            <div class="spinner-border spinner-border-sm text-primary me-2"></div>
                                            Validating...
                                        </div>
                                    </div>
                                </form>

                                <div class="text-center mt-4">
                                    <small class="text-muted">
                                        By creating an account, you agree to our
                                        <a href="#" class="text-decoration-none">Terms of Service</a> and
                                        <a href="/Privacy" class="text-decoration-none">Privacy Policy</a>
                                    </small>
                                </div>
                            </div>
                        </div>

                        <div class="text-center mt-4">
                            <p class="text-muted mb-0">Already have an account?</p>
                            <a asp-page="./Login" asp-route-returnUrl="@Model.ReturnUrl" class="btn btn-outline-primary mt-2">
                                <i class="bi bi-box-arrow-in-right me-2"></i>Sign In
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .step {
        position: relative;
        margin-bottom: 1rem;
    }

    .step-circle {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: #e9ecef;
        color: #6c757d;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 0.5rem;
        font-weight: bold;
        transition: all 0.3s ease;
    }

    .step.active .step-circle {
        background-color: var(--bs-primary);
        color: white;
    }

    .step.completed .step-circle {
        background-color: var(--bs-success);
        color: white;
    }

    .expertise-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 0.5rem;
        max-height: 300px;
        overflow-y: auto;
        padding: 1rem;
        border: 1px solid #dee2e6;
        border-radius: 0.375rem;
        background-color: #f8f9fa;
    }

    .expertise-item {
        background: white;
        padding: 0.5rem;
        border-radius: 0.25rem;
        border: 1px solid #dee2e6;
        transition: all 0.2s ease;
    }

    .expertise-item:hover {
        border-color: var(--bs-primary);
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .speaker-type-card {
        transition: all 0.3s ease;
        border: 2px solid transparent;
    }

    .speaker-type-card:hover {
        border-color: var(--bs-primary);
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .speaker-type-radio:checked + label .speaker-type-card {
        border-color: var(--bs-primary);
        background-color: var(--bs-primary-bg-subtle);
    }
</style>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://unpkg.com/htmx.org@1.9.6"></script>
    <script src="https://unpkg.com/hyperscript.org@0.9.12"></script>

    <script>
        let currentStep = 1;
        const totalSteps = 4;

        function updateStepIndicator(step) {
            // Update step indicators
            document.querySelectorAll('.step').forEach(s => {
                s.classList.remove('active');
                const stepNum = parseInt(s.dataset.step);
                if (stepNum < step) {
                    s.classList.add('completed');
                } else if (stepNum === step) {
                    s.classList.add('active');
                } else {
                    s.classList.remove('completed');
                }
            });

            // Update navigation buttons
            const prevBtn = document.getElementById('prevBtn');
            const nextBtn = document.getElementById('nextBtn');
            const submitBtn = document.getElementById('submitBtn');

            prevBtn.style.display = step === 1 ? 'none' : 'block';
            nextBtn.style.display = step === totalSteps ? 'none' : 'block';
            submitBtn.style.display = step === totalSteps ? 'block' : 'none';

            // Update HTMX attributes for navigation buttons
            if (step > 1) {
                prevBtn.setAttribute('hx-vals', `{"step": "${step - 1}"}`);
            }
            if (step < totalSteps) {
                nextBtn.setAttribute('hx-vals', `{"step": "${step}"}`);
                nextBtn.setAttribute('onclick', `updateStepIndicator(${step + 1})`);
            }

            currentStep = step;
        }

        // HTMX event listeners
        document.addEventListener('htmx:beforeRequest', function(event) {
            // Show loading state
            const button = event.detail.elt;
            if (button.id === 'nextBtn') {
                button.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Validating...';
                button.disabled = true;
            }
        });

        document.addEventListener('htmx:afterRequest', function(event) {
            // Reset button state
            const button = event.detail.elt;
            if (button.id === 'nextBtn') {
                button.innerHTML = 'Next<i class="bi bi-arrow-right ms-2"></i>';
                button.disabled = false;
            }

            // Update step indicators and navigation based on which handler was called
            if (event.detail.successful) {
                const requestUrl = event.detail.requestConfig.path;

                if (requestUrl.includes('ValidateStep')) {
                    // If validation was successful and no validation errors, move to next step
                    const responseHasErrors = event.target.querySelector('.text-danger') !== null;
                    if (!responseHasErrors) {
                        updateStepIndicator(currentStep + 1);
                    }
                } else if (requestUrl.includes('PreviousStep')) {
                    // Move to previous step
                    updateStepIndicator(currentStep - 1);
                }
            }
        });

        // Form submission with HTMX
        document.addEventListener('htmx:configRequest', function(event) {
            if (event.detail.path.includes('ValidateStep')) {
                // Include current step in the request
                event.detail.parameters.currentStep = currentStep;
            } else if (event.detail.path.includes('PreviousStep')) {
                event.detail.parameters.currentStep = currentStep;
            }
        });

        // Utility functions for dynamic content
        function addCustomExpertise() {
            const container = document.getElementById('customExpertiseContainer');
            const newInput = document.createElement('div');
            newInput.className = 'input-group mb-2 custom-expertise-input';
            newInput.innerHTML = `
                <input type="text" name="Input.CustomExpertise" class="form-control" placeholder="Enter a custom expertise area" />
                <button type="button" class="btn btn-outline-danger" onclick="removeCustomExpertise(this)">
                    <i class="bi bi-trash"></i>
                </button>
            `;
            container.appendChild(newInput);
        }

        function removeCustomExpertise(button) {
            button.closest('.custom-expertise-input').remove();
        }

        function addSocialMediaRow() {
            const container = document.getElementById('socialMediaContainer');
            const newRow = document.createElement('div');
            newRow.className = 'row mb-3 social-media-row';
            newRow.innerHTML = `
                <div class="col-md-4">
                    <select name="Input.SocialMediaPlatforms" class="form-select">
                        <option value="">Select Platform</option>
                        <option value="LinkedIn">LinkedIn</option>
                        <option value="Twitter">Twitter</option>
                        <option value="GitHub">GitHub</option>
                        <option value="YouTube">YouTube</option>
                        <option value="Website">Personal Website</option>
                        <option value="Blog">Blog</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <div class="col-md-6">
                    <input type="url" name="Input.SocialMediaUrls" class="form-control" placeholder="https://..." />
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-outline-danger w-100" onclick="removeSocialMediaRow(this)">
                        <i class="bi bi-trash"></i>
                    </button>
                </div>
            `;
            container.appendChild(newRow);
        }

        function removeSocialMediaRow(button) {
            if (document.querySelectorAll('.social-media-row').length > 1) {
                button.closest('.social-media-row').remove();
            }
        }
    </script>
}