@model MoreSpeakers.Web.Pages.BrowseSpeakersModel
    @if (Model.Speakers?.Any() == true)
    {
        <div class="row">
            @foreach (var speaker in Model.Speakers)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card">
                        <div class="card">
                            @if (!string.IsNullOrEmpty(speaker.HeadshotUrl))
                            {
                            <img src="@speaker.HeadshotUrl" alt="@speaker.FullName"
                                class="object-fit-contain border rounded" style="width:100%; height:100%;">
                            }
                            else
                            {
                            <div
                                class="align-items-center justify-content-center">
                                <i class="bi bi-person-fill text-muted"></i>
                            </div>
                            }
                            <div class="card-body">
                                <h5 class="card-title">@speaker.FullName</h5>
                                <span class="badge @(speaker.IsNewSpeaker ? "bg-primary" : "bg-success") mb-2">
                                    @(speaker.IsNewSpeaker ? "New Speaker" : "Experienced Speaker")
                                </span>
                                
                                <p class="card-text">
                                    @{
                                        var bioPreview = speaker.Bio.Length > 120 ? speaker.Bio.Substring(0, 120) + "..." : speaker.Bio;
                                    }
                                    @bioPreview    
                                </p>
                                <p>
                                    @foreach (var userExpertise in speaker.UserExpertise.Take(4))
                                    {
                                        <span class="badge rounded-pill text-bg-primary fw-light">@userExpertise.Expertise.Name</span>
                                    }
                                    @if (speaker.UserExpertise.Count > 4)
                                    {
                                        <span class="text-muted small">+@(speaker.UserExpertise.Count - 4) more</span>
                                    }
                                </p>
                                <!-- Social Media Links -->
                                @if (speaker.SocialMediaLinks.Any())
                                {
                                    <div>
                                        @foreach (var social in speaker.SocialMediaLinks.Take(3))
                                        {
                                            <a href="@social.Url" target="_blank" class="btn btn-secondary">
                                                <i class="bi bi-@GetSocialIcon(social.Platform)"></i>
                                                @social.Platform
                                            </a>
                                        }
                                    </div>
                                }
                            </div>
                            <div class="card-footer">
                                <a asp-page="/Profile/View" asp-route-id="@speaker.Id"
                                   class="btn btn-primary">
                                    <i class="bi bi-eye me-1"></i>View Profile
                                </a>
                                @if (User.Identity?.IsAuthenticated == true && User.Identity.Name != speaker.Email)
                                {
                                    @if (speaker.IsExperiencedSpeaker)
                                    {
                                        <button class="btn btn-primary"
                                                hx-post="/Mentorship/Request"
                                                hx-vals='{"mentorId": "@speaker.Id"}'
                                                hx-confirm="Request mentorship from @speaker.FullName?"
                                                hx-target="#mentorship-status-@(speaker.Id)">
                                            <i class="bi bi-person-plus me-1"></i>Request Mentor
                                        </button>
                                    }
                                }
                                <div id="mentorship-status-@speaker.Id" class="mt-2"></div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <nav aria-label="Speakers pagination" class="mt-4">
                <ul class="pagination justify-content-center">
                    @if (Model.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link"
                               href="@GetPageUrl(Model.CurrentPage - 1)"
                               hx-get="@GetPageUrl(Model.CurrentPage - 1)"
                               hx-target="#speakers-container">
                                <i class="bi bi-chevron-left"></i> Previous
                            </a>
                        </li>
                    }

                    @for (var i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link"
                               href="@GetPageUrl(i)"
                               hx-get="@GetPageUrl(i)"
                               hx-target="#speakers-container">
                                @i
                            </a>
                        </li>
                    }

                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link"
                               href="@GetPageUrl(Model.CurrentPage + 1)"
                               hx-get="@GetPageUrl(Model.CurrentPage + 1)"
                               hx-target="#speakers-container">
                                Next <i class="bi bi-chevron-right"></i>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        }
    }
    else
    {
        <div class="text-center py-5">
            <i class="bi bi-people display-1 text-muted"></i>
            <h3 class="mt-3">No speakers found</h3>
            <p class="text-muted">Try adjusting your search criteria or browse all speakers.</p>
            @if (!string.IsNullOrEmpty(Model.SearchTerm) || Model.SpeakerTypeFilter.HasValue || Model.ExpertiseFilter.HasValue)
            {
                <a href="/BrowseSpeakers" class="btn btn-primary">
                    <i class="bi bi-arrow-clockwise me-2"></i>Clear Filters
                </a>
            }
        </div>
    }

@functions {
    private string GetSocialIcon(string platform)
    {
        return platform.ToLower() switch
        {
            "linkedin" => "linkedin",
            "twitter" => "twitter-x",
            "github" => "github",
            "website" => "globe",
            "blog" => "journal-text",
            "youtube" => "youtube",
            "mastodon" => "mastodon",
            _ => "link-45deg"
        };
    }

    private string GetPageUrl(int page)
    {
        var queryParams = new List<string> { $"CurrentPage={page}" };

        if (!string.IsNullOrEmpty(Model.SearchTerm))
            queryParams.Add($"SearchTerm={Uri.EscapeDataString(Model.SearchTerm)}");

        if (Model.SpeakerTypeFilter.HasValue)
            queryParams.Add($"SpeakerTypeFilter={Model.SpeakerTypeFilter}");

        if (Model.ExpertiseFilter.HasValue)
            queryParams.Add($"ExpertiseFilter={Model.ExpertiseFilter}");

        if (!string.IsNullOrEmpty(Model.SortBy))
            queryParams.Add($"SortBy={Model.SortBy}");

        return $"/BrowseSpeakers?{string.Join("&", queryParams)}";
    }
}