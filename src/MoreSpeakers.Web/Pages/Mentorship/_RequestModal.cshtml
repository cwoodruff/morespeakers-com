@model MoreSpeakers.Web.Models.ViewModels.RequestMentorshipViewModel

<div class="modal fade" id="requestModal" tabindex="-1"
     _="on htmx:beforeRequest show #loading
       on htmx:afterRequest hide #loading">
    <div class="modal-dialog">
        <form hx-post="/Mentorship/Browse?handler=SubmitRequest"
              hx-indicator="#submit-loading"
              hx-on::after-request="this.showModal();">
            @Html.AntiForgeryToken()
            <input type="hidden" name="targetId" value="@Model.TargetUser.Id"/>
            <input type="hidden" name="type" value="@Model.Type"/>
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">
                    @if (Model.Type == MentorshipType.NewToExperienced)
                    {
                        <i class="bi bi-person-plus me-2"></i>
                        <text>Request Mentorship</text>
                    }
                    else
                    {
                        <i class="bi bi-people me-2"></i>
                        <text>Connect as Peers</text>
                    }
                </h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="card mb-3">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            @if (!string.IsNullOrEmpty(Model.TargetUser.HeadshotUrl))
                            {
                                <img src="@Model.TargetUser.HeadshotUrl" class="mentor-avatar me-3" alt="@Model.TargetUser.FullName"/>
                            }
                            else
                            {
                                <div class="mentor-avatar mentor-avatar-placeholder me-3">
                                    <i class="bi bi-person-fill"></i>
                                </div>
                            }
                            <div>
                                <h5 class="mb-0">@Model.TargetUser.FullName</h5>
                                <small class="text-muted">@Model.TargetUser.SpeakerType.Name</small>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Request Message -->
                <div class="mb-3">
                    <label class="form-label fw-medium">Your Message <span class="text-danger">*</span></label>
                    <textarea name="requestMessage" class="form-control" rows="5"
                              maxlength="2000" required
                              placeholder="@Model.GetPlaceholderText()"
                              id="request-message-textarea"></textarea>
                    <div class="form-text">
                        <span id="char-count">0</span>/2000 characters
                    </div>
                </div>

                <!-- Focus Areas -->
                @if (Model.AvailableExpertise.Any())
                {
                    <div class="mb-3">
                        <label class="form-label fw-medium">Focus Areas <span class="text-muted">(Select areas you'd like to focus on)</span></label>
                        <div class="expertise-selection-grid">
                            @foreach (var expertise in Model.AvailableExpertise)
                            {
                                <div class="form-check">
                                    <input type="checkbox" name="focusAreaIds" value="@expertise.Id"
                                           class="form-check-input" id="focus-@expertise.Id">
                                    <label class="form-check-label" for="focus-@expertise.Id">
                                        @expertise.Name
                                    </label>
                                </div>
                            }
                        </div>
                    </div>
                }

                <!-- Preferred Frequency -->
                <div class="mb-3">
                    <label class="form-label fw-medium">Preferred Meeting Frequency</label>
                    <select name="preferredFrequency" class="form-select">
                        <option value="Weekly">Weekly</option>
                        <option value="Bi-weekly" selected>Bi-weekly</option>
                        <option value="Monthly">Monthly</option>
                        <option value="As needed">As needed</option>
                    </select>
                </div>
            </div>
            <!-- Actions -->
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary gap-2" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-chat-dots me-2"></i>@Model.GetRequestButtonText()
                </button>
            </div>
        </div>
        </form>
    </div>
</div>

<div id="loading" class="htmx-indicator visually-hidden">
    <div class="spinner-border spinner-border-sm me-2" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
    Requesting Mentor...
</div>
<script>
    // Character counter
    const textarea = document.getElementById('request-message-textarea');
    const charCount = document.getElementById('char-count');
    if (textarea && charCount) {
        textarea.addEventListener('input', function () {
            charCount.textContent = this.value.length;
        });
    }
</script>
