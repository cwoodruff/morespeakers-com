@page
@model MoreSpeakers.Web.Pages.Profile.ViewModel
@{
    ViewData["Title"] = Model.ProfileUser is not null ? Model.ProfileUser.FullName + " - Speaker Profile" : "Speaker Profile";
}

<div class="container py-4">
    <!-- Navigation Breadcrumb -->
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/" class="text-decoration-none">Home</a></li>
            <li class="breadcrumb-item"><a asp-page="/BrowseSpeakers" class="text-decoration-none">Browse Speakers</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.ProfileUser?.FullName</li>
        </ol>
    </nav>
    <!-- Profile Header Card -->
    <div class="card mb-3">
        <div class="row g-0">
            <div class="col-md-3">
                @if (!string.IsNullOrEmpty(Model.ProfileUser?.HeadshotUrl))
                {
                    <img src="@Model.ProfileUser.HeadshotUrl" alt="@Model.ProfileUser.FullName" 
                         class="object-fit-contain border rounded" style="width:100%; height:100%;" />
                }
                else
                {
                    <div class="align-items-center justify-content-center">
                        <i class="bi bi-person"></i>
                    </div>
                }
            </div>
            <div class="col-md-9">
                <div class="card-body">
                    <h1 class="card-title">@Model.ProfileUser?.FullName</h1>
                    <span class="badge @(Model.ProfileUser is { IsNewSpeaker: true } ? "bg-primary" : "bg-success") fs-6 px-3 py-2">
                        <i class="bi @(Model.ProfileUser is { IsNewSpeaker: true } ? "bi-person-plus" : "bi-award") me-2"></i>
                        @(Model.ProfileUser is { IsNewSpeaker: true } ? "New Speaker" : "Experienced Speaker")
                    </span>
                    @if (!string.IsNullOrEmpty(Model.ProfileUser?.Bio))
                    {
                        <p class="card-text">@Model.ProfileUser.Bio</p>
                    }
                    @if (!string.IsNullOrEmpty(Model.ProfileUser?.Goals))
                    {
                        <div>
                            <h6>Goals & Objectives:</h6>
                            <p class="card-text">@Model.ProfileUser.Goals</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Expertise and Links Row -->
    <div class="row">
        @if (Model.UserExpertise.Any())
        {
            <div class="col-md-@(Model.SocialMedia.Any() ? "6" : "12") mb-4">
                <div class="card h-100">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="bi bi-gear-fill me-2"></i>
                            Expertise Areas
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="d-flex flex-wrap gap-2">
                            @foreach (var ue in Model.UserExpertise)
                            {
                                <span class="badge rounded-pill text-bg-primary fw-light">@ue.Expertise.Name</span>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }

        @if (Model.SocialMedia.Any())
        {
            <div class="col-md-@(Model.UserExpertise.Any() ? "6" : "12") mb-4">
                <div class="card h-100">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="bi bi-link-45deg me-2"></i>
                            Social Links
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="">
                            @foreach (var socialMedia in Model.SocialMedia)
                            {
                                <a href="@socialMedia.Url" target="_blank" class="btn btn-primary">
                                    <i class="bi bi-@GetSocialIcon(socialMedia.Platform)"></i>
                                    @socialMedia.Platform
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (Model.UserExpertise.Any() != true && Model.SocialMedia.Any() != true)
    {
        <div class="card">
            <div class="card-body text-center py-5">
                <i class="bi bi-info-circle display-4 text-muted mb-3"></i>
                <h5 class="text-muted">Profile Information</h5>
                <p class="text-muted mb-0">This speaker hasn't added expertise areas or social links yet.</p>
            </div>
        </div>
    }

    <!-- Additional Profile Information -->
    @if (!string.IsNullOrEmpty(Model.ProfileUser?.SessionizeUrl))
    {
        <div class="card mt-4">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="bi bi-calendar3 me-2"></i>Speaking Portfolio
                </h5>
            </div>
            <div class="card-body">
                <a href="@Model.ProfileUser.SessionizeUrl" target="_blank" class="btn btn-outline-primary">
                    <i class="bi bi-box-arrow-up-right me-2"></i>View Sessionize Profile
                </a>
                <div class="form-text mt-2">See this speaker's talks, sessions, and speaking history.</div>
            </div>
        </div>
    }

    <!-- Contact/Mentorship Actions -->
    @if (User.Identity?.IsAuthenticated == true)
    {
        <div class="card mt-4">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="bi bi-handshake me-2"></i>Connect with @Model.ProfileUser?.FirstName
                </h5>
            </div>
            <div class="card-body">
                @if (Model.ProfileUser is { IsExperiencedSpeaker: true })
                {
                    <p class="card-text">
                        <strong>@Model.ProfileUser.FirstName</strong> is an experienced speaker who can provide mentorship and guidance for your speaking journey.
                    </p>
                    <button class="btn btn-primary"
                            hx-post="/Mentorship/Request"
                            hx-vals='{"mentorId": "@Model.ProfileUser.Id"}'
                            hx-confirm="Request mentorship from @Model.ProfileUser.FullName?"
                            hx-target="#mentorship-result"
                            hx-swap="innerHTML">
                        <i class="bi bi-person-plus me-2"></i>Request Mentorship
                    </button>
                }
                else
                {
                    <p class="card-text">
                        <strong>@Model.ProfileUser.FirstName</strong> is a new speaker looking for guidance and mentorship opportunities.
                    </p>
                    <button class="btn btn-success"
                            hx-post="/Mentorship/Offer"
                            hx-vals='{"newSpeakerId": "@Model.ProfileUser.Id"}'
                            hx-confirm="Offer mentorship to @Model.ProfileUser.FullName?"
                            hx-target="#mentorship-result"
                            hx-swap="innerHTML">
                        <i class="bi bi-award me-2"></i>Offer Mentorship
                    </button>
                }
                <div id="mentorship-result" class="mt-3"></div>
            </div>
        </div>
    }
    else
    {
        <div class="card mt-4">
            <div class="card-body text-center">
                <h5 class="card-title">Connect with @Model.ProfileUser?.FirstName</h5>
                <p class="card-text">Sign in to request mentorship or connect with this speaker.</p>
                <a asp-area="Identity" asp-page="/Account/Login" class="btn btn-primary">
                    <i class="bi bi-box-arrow-in-right me-2"></i>Sign In to Connect
                </a>
            </div>
        </div>
    }

    <!-- Profile Statistics -->
    <div class="card mt-4">
        <div class="card-header">
            <h5 class="mb-0">
                <i class="bi bi-graph-up me-2"></i>Profile Statistics
            </h5>
        </div>
        <div class="card-body">
            <div class="row text-center">
                <div class="col-md-4">
                    <div class="stat-item">
                        <div class="stat-number">@(Model.UserExpertise?.Count() ?? 0)</div>
                        <div class="stat-label">Expertise Areas</div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="stat-item">
                        <div class="stat-number">@(Model.SocialMedia?.Count() ?? 0)</div>
                        <div class="stat-label">Social Links</div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="stat-item">
                        <div class="stat-number">@Model.ProfileUser?.CreatedDate.ToString("MMM yyyy")</div>
                        <div class="stat-label">Member Since</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {

    private string GetSocialIcon(string platform)
    {
        return platform.ToLower() switch
        {
            "linkedin" => "linkedin",
            "twitter" => "twitter-x",
            "github" => "github",
            "website" => "globe",
            "blog" => "journal-text",
            "youtube" => "youtube",
            "mastodon" => "mastodon",
            "bluesky" => "bluesky",
            _ => "link-45deg"
        };
    }
}