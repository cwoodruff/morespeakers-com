@model EditModel

@if (Model.HasValidationErrors && !string.IsNullOrEmpty(Model.ValidationMessage))
{
    <div class="alert alert-danger mb-3">
        <i class="bi bi-exclamation-triangle me-2"></i>@Html.Raw(@Model.ValidationMessage)
    </div>
}
@if (!Model.HasValidationErrors && !string.IsNullOrEmpty(Model.SuccessMessage))
{
    <div class="alert alert-success mb-3">
        <i class="bi bi-check-circle me-2"></i>@Model.SuccessMessage
    </div>
}

<form hx-post="/Profile/Edit?handler=ChangePassword" 
      hx-target="#tabContent" 
      hx-swap="innerHTML" 
      hx-indicator="#passwordLoadingSpinner">
      
    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

    <div class="row justify-content-center">
        <div class="alert alert-info">
            <i class="bi bi-info-circle me-2"></i>
            <strong>Password Requirements:</strong>
            <ul class="mb-0 mt-2">
                <li>At least 6 characters long</li>
                <li>Mix of letters and numbers recommended</li>
                <li>Use a unique password you don't use elsewhere</li>
                <li>We recommend a password manager</li>
            </ul>
        </div>

        <div class="col-md-6 mb-3">
            <label asp-for="PasswordInput.CurrentPassword" class="form-label fw-medium">Current Password</label>
            <div class="input-group">
                <span class="input-group-text border-end-0">
                    <i class="bi bi-lock text-muted"></i>
                </span>
                <input asp-for="PasswordInput.CurrentPassword" class="form-control border-start-0"
                       placeholder="Enter your current password" autocomplete="current-password"/>
            </div>
            <span asp-validation-for="PasswordInput.CurrentPassword" class="text-danger small"></span>
            <div class="form-text">Enter your current password to verify your identity.</div>
        </div>
        
        <hr class="my-4">

        <div class="col-md-6 mb-3">
            <label asp-for="PasswordInput.NewPassword" class="form-label fw-medium">New Password</label>
            <div class="input-group">
                <span class="input-group-text border-end-0">
                    <i class="bi bi-lock text-muted"></i>
                </span>
                <input asp-for="PasswordInput.NewPassword" class="form-control border-start-0"
                       placeholder="Enter your new password" autocomplete="new-password"/>
            </div>
            <span asp-validation-for="PasswordInput.NewPassword" class="text-danger small"></span>
        </div>
        
        <div class="col-md-6 mb-3">
            <label asp-for="PasswordInput.ConfirmPassword" class="form-label fw-medium">Confirm Password</label>
            <div class="input-group">
                <span class="input-group-text border-end-0">
                    <i class="bi bi-shield-check text-muted"></i>
                </span>
                <input asp-for="PasswordInput.ConfirmPassword" class="form-control border-start-0"
                       placeholder="Confirm your new password" autocomplete="new-password"/>
            </div>
            <span asp-validation-for="PasswordInput.ConfirmPassword" class="text-danger small"></span>
        </div>

        <div class="d-flex justify-content-between align-items-center">
            <div id="passwordLoadingSpinner" class="htmx-indicator">
                <div class="spinner-border spinner-border-sm me-2" role="status">
                    <span class="visually-hidden">Changing...</span>
                </div>
                Changing password...
            </div>
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-floppy me-2"></i>Change Password
            </button>
            @Html.AntiForgeryToken()
        </div>
    </div>
</form>

<script>
    // Clear password fields on successful change
    document.addEventListener('htmx:afterRequest', function(event) {
        if (event.detail.successful && event.detail.xhr.responseText.includes('Password changed successfully')) {
            // Clear all password fields
            const passwordFields = document.querySelectorAll('input[type="password"]');
            passwordFields.forEach(field => field.value = '');
        }
    });
</script>