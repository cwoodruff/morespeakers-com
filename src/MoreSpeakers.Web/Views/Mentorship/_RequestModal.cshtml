@model MoreSpeakers.Web.Models.ViewModels.MentorshipRequestViewModel

<div class="modal fade" tabindex="-1" id="requestModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-chat-dots me-2"></i>Request Mentorship
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            
            <form hx-post="/Mentorship/Browse?handler=SubmitRequest"
                  hx-target="#modal-container"
                  hx-swap="innerHTML"
                  hx-indicator="#request-loading">
                @Html.AntiForgeryToken()
                <input type="hidden" name="targetId" value="@Model.Mentor.Id"/>
                <input type="hidden" name="type" value="@Model.MentorshipType.ToString()"/>
                  
                <div class="modal-body">
                    <!-- Mentor Summary -->
                    <div class="mentor-summary card bg-light mb-4">
                        <div class="card-body">
                            <div class="d-flex align-items-center">
                                <div class="me-3">
                                    @if (!string.IsNullOrEmpty(Model.Mentor.HeadshotUrl))
                                    {
                                    <img src="@Model.Mentor.HeadshotUrl" alt="@Model.Mentor.FullName"
                                         class="object-fit-contain border image-thumbnail rounded float-start" style="width:10rem; height:10rem;">
                                    }
                                    else
                                    {
                                    <div class="align-items-center justify-content-center">
                                        <i class="bi bi-person-fill text-muted d-flex justify-content-center align-items-center" style="font-size: 10rem;"></i>
                                    </div>
                                    }
                                </div>
                                <div>
                                    <h5 class="card-title">@Model.Mentor.FullName</h5>
                                    <p class="badge bg-success">@Model.Mentor.SpeakerType.Name</p>
                                    @if (!string.IsNullOrEmpty(Model.Mentor.MentorshipFocus))
                                    {
                                        <p class="small mb-0"><strong>Focus:</strong> @Model.Mentor.MentorshipFocus</p>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Focus Areas Selection -->
                    @if (Model.AvailableExpertise.Any())
                    {
                        <div class="mb-4">
                            <label class="form-label fw-medium">
                                <i class="bi bi-bullseye me-2"></i>Focus Areas 
                                <small class="text-muted">(Select up to 3 areas you'd like to focus on)</small>
                            </label>
                            <div class="expertise-selection">
                                @foreach (var expertise in Model.AvailableExpertise)
                                {
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" switch
                                               name="SelectedExpertiseIds" value="@expertise.Id" 
                                               id="focus-@expertise.Id">
                                        <label class="form-check-label" for="focus-@expertise.Id">@expertise.Name</label>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    
                    <!-- Request Message -->
                    <div class="mb-4">
                        <label class="form-label fw-medium" for="requestMessage">
                            <i class="bi bi-chat-text me-2"></i>Your Message
                        </label>
                        <textarea class="form-control" name="RequestMessage" id="requestMessage"
                                  placeholder="Tell @Model.Mentor.FirstName why you'd like their mentorship and what you hope to achieve..." 
                                  required rows="4"></textarea>
                        <div class="form-text">
                            Introduce yourself and explain your goals. Be specific about what you're looking for in a mentorship.
                        </div>
                    </div>
                    
                    <!-- Preferred Meeting Frequency -->
                    <div class="mb-4">
                        <label class="form-label fw-medium" for="frequency">
                            <i class="bi bi-calendar-week me-2"></i>Preferred Meeting Frequency
                        </label>
                        <select class="form-select" name="PreferredFrequency" id="frequency">
                            <option value="weekly">Weekly - Regular check-ins and guidance</option>
                            <option value="biweekly" selected>Bi-weekly - Structured progress sessions</option>
                            <option value="monthly">Monthly - Milestone reviews and direction</option>
                            <option value="as-needed">As needed - Flexible based on projects</option>
                        </select>
                    </div>

                    <!-- Mentorship Type Info -->
                    <div class="alert alert-info">
                        <i class="bi bi-info-circle me-2"></i>
                        <strong>@(Model.MentorshipType == MoreSpeakers.Domain.Models.MentorshipType.NewToExperienced ? "New Speaker Mentorship" : "Peer Mentorship")</strong><br>
                        @if (Model.MentorshipType == MoreSpeakers.Domain.Models.MentorshipType.NewToExperienced)
                        {
                            <small>You're requesting guidance as a new speaker. Your mentor will help you develop speaking skills, find opportunities, and grow your confidence.</small>
                        }
                        else
                        {
                            <small>You're requesting peer mentorship with a fellow experienced speaker. This is great for sharing experiences, collaboration, and mutual growth.</small>
                        }
                    </div>
                </div>
                
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary gap-2" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <span id="request-loading" class="htmx-indicator spinner-border spinner-border-sm me-2"></span>
                        <i class="bi bi-chat-dots me-2"></i>Send Request
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    // Limit expertise selection to 3
    document.addEventListener('change', function(e) {
        if (e.target.name === 'SelectedExpertiseIds') {
            const checkboxes = document.querySelectorAll('input[name="SelectedExpertiseIds"]');
            const checked = document.querySelectorAll('input[name="SelectedExpertiseIds"]:checked');
            
            if (checked.length >= 3) {
                checkboxes.forEach(cb => {
                    if (!cb.checked) cb.disabled = true;
                });
            } else {
                checkboxes.forEach(cb => cb.disabled = false);
            }
        }
    });
    function showModal() {
        const modal = new bootstrap.Modal('#requestModal');
        modal.show();
    }
    // scopes the modal so we can keep creating them
    showModal();

</script>